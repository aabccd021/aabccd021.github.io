{
	"version": "https://jsonfeed.org/version/1.1",
	"title": "aabccd021 blog",
	"language": "en",
	"home_page_url": "https://aabccd021.github.io/",
	"feed_url": "https://aabccd021.github.io/feed/feed.json",
	"description": "Blog of aabccd021 (Muhamad Abdurahman). Mostly about software engineering",
	"author": {
		"name": "Muhamad Abdurahman",
		"url": "https://aabccd021.github.io/about/"
	},
	"items": [
		{
			"id": "https://aabccd021.github.io/blog/2023-01-30-initial-commit/",
			"url": "https://aabccd021.github.io/blog/2023-01-30-initial-commit/",
			"title": "How to do initial commit",
			"content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\" tabindex=\"-1\">Quick Start <a class=\"header-anchor\" href=\"https://aabccd021.github.io/blog/2023-01-30-initial-commit/\">#</a></h2>\n<h3 id=\"create-a-new-post\" tabindex=\"-1\">Create a new post <a class=\"header-anchor\" href=\"https://aabccd021.github.io/blog/2023-01-30-initial-commit/\">#</a></h3>\n<p>Sets the module system for the program. See the <a href=\"https://aabccd021.github.io/docs/handbook/modules.html\">Modules</a> reference page for more information. You very likely want <code>&quot;CommonJS&quot;</code> for node projects.</p>\n<p>Changing <code>module</code> affects <code>moduleResolution</code> which <a href=\"https://aabccd021.github.io/docs/handbook/module-resolution.html\">also has a reference page</a>.</p>\n<p>Here's some example output for this file:</p>\n<pre class=\"shiki gruvbox-material-dark twoslash lsp\" style=\"background-color: #282828; color: #d4be98\"><div class=\"language-id\">ts</div><div class=\"code-container\"><code><div class=\"line\"><span style=\"color: #D3869B\">import</span><span style=\"color: #D4BE98\"> { <data-lsp lsp=\"(alias) function pipe&lt;A>(a: A): A (+19 overloads)&#10;import pipe\">pipe</data-lsp> } </span><span style=\"color: #EA6962\">from</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #D8A657\">&apos;fp-ts/lib/function&apos;</span><span style=\"color: #D4BE98\">;</span></div><div class=\"line\">&nbsp;</div><div class=\"line\"><span style=\"color: #E78A4E\">const</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #A9B665\"><data-lsp lsp=\"const b: (x: number) => number\">b</data-lsp></span><span style=\"color: #D4BE98\"> </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #D4BE98\"> (<data-lsp lsp=\"(parameter) x: number\">x</data-lsp></span><span style=\"color: #A89984\">:</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #7DAEA3\">number</span><span style=\"color: #D4BE98\">) </span><span style=\"color: #E78A4E\">=&gt;</span><span style=\"color: #D4BE98\"> <data-lsp lsp=\"(parameter) x: number\">x</data-lsp>;</span></div><div class=\"line\"><span style=\"color: #E78A4E\">const</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #A9B665\"><data-lsp lsp=\"const c: (x: number) => number\">c</data-lsp></span><span style=\"color: #D4BE98\"> </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #D4BE98\"> (<data-lsp lsp=\"(parameter) x: number\">x</data-lsp></span><span style=\"color: #A89984\">:</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #7DAEA3\">number</span><span style=\"color: #D4BE98\">) </span><span style=\"color: #E78A4E\">=&gt;</span><span style=\"color: #D4BE98\"> <data-lsp lsp=\"(parameter) x: number\">x</data-lsp>;</span></div><div class=\"line\"><span style=\"color: #E78A4E\">const</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #A9B665\"><data-lsp lsp=\"const d: (x: number) => number\">d</data-lsp></span><span style=\"color: #D4BE98\"> </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #D4BE98\"> (<data-lsp lsp=\"(parameter) x: number\">x</data-lsp></span><span style=\"color: #A89984\">:</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #7DAEA3\">number</span><span style=\"color: #D4BE98\">) </span><span style=\"color: #E78A4E\">=&gt;</span><span style=\"color: #D4BE98\"> <data-lsp lsp=\"(parameter) x: number\">x</data-lsp>;</span></div><div class=\"line\">&nbsp;</div><div class=\"line\"><span style=\"color: #E78A4E\">const</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #A9B665\"><data-lsp lsp=\"const a: (v: number) => number\">a</data-lsp></span><span style=\"color: #D4BE98\"> </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #D4BE98\"> (<data-lsp lsp=\"(parameter) v: number\">v</data-lsp></span><span style=\"color: #A89984\">:</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #7DAEA3\">number</span><span style=\"color: #D4BE98\">) </span><span style=\"color: #E78A4E\">=&gt;</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #A9B665\"><data-lsp lsp=\"(alias) pipe&lt;number, number, number, number>(a: number, ab: (a: number) => number, bc: (b: number) => number, cd: (c: number) => number): number (+19 overloads)&#10;import pipe\">pipe</data-lsp></span><span style=\"color: #D4BE98\">(</span></div><div class=\"line\"><span style=\"color: #D4BE98\">  <data-lsp lsp=\"(parameter) v: number\">v</data-lsp>,</span></div><div class=\"line\"><span style=\"color: #D4BE98\">  <data-lsp lsp=\"const b: (x: number) => number\">b</data-lsp>,</span></div><div class=\"line\"><span style=\"color: #D4BE98\">  <data-lsp lsp=\"const c: (x: number) => number\">c</data-lsp>,</span></div><div class=\"line\"><span style=\"color: #D4BE98\">  <data-lsp lsp=\"const d: (x: number) => number\">d</data-lsp></span></div><div class=\"line\"><span style=\"color: #D4BE98\">) </span></div></code></div></pre>\n<h4 id=\"commonjs\" tabindex=\"-1\"><code>CommonJS</code> <a class=\"header-anchor\" href=\"https://aabccd021.github.io/blog/2023-01-30-initial-commit/\">#</a></h4>\n<pre class=\"shiki gruvbox-material-dark twoslash lsp\" style=\"background-color: #282828; color: #d4be98\"><div class=\"language-id\">ts</div><div class=\"code-container\"><code><div class=\"line\"><span style=\"color: #A89984\">// @filename: index.ts</span></div><div class=\"line\"><span style=\"color: #D3869B\">import</span><span style=\"color: #D4BE98\"> { <data-lsp lsp=\"(alias) const valueOfPi: 3.1425&#10;import valueOfPi\">valueOfPi</data-lsp> } </span><span style=\"color: #EA6962\">from</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #D8A657\">\"./constants\"</span><span style=\"color: #D4BE98\">;</span></div><div class=\"line\">&nbsp;</div><div class=\"line\"><span style=\"color: #D3869B\">export</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #E78A4E\">const</span><span style=\"color: #D4BE98\"> <data-lsp lsp=\"const twoPi: number\" style=\"border-bottom: solid 2px lightgrey;\">twoPi</data-lsp> </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #D4BE98\"> <data-lsp lsp=\"(alias) const valueOfPi: 3.1425&#10;import valueOfPi\">valueOfPi</data-lsp> </span><span style=\"color: #E78A4E\">*</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #D3869B\">25</span><span style=\"color: #D4BE98\">;</span></div><div class=\"meta-line\"><span class=\"popover-prefix\">              </span><span class=\"popover\"><div class=\"arrow\"></div>const twoPi: number</span></div></code></div></pre>\n<h4 id=\"commonjs-1\" tabindex=\"-1\"><code>CommonJS</code> <a class=\"header-anchor\" href=\"https://aabccd021.github.io/blog/2023-01-30-initial-commit/\">#</a></h4>\n<pre class=\"shiki gruvbox-material-dark twoslash lsp\" style=\"background-color: #282828; color: #d4be98\"><div class=\"language-id\">ts</div><div class=\"code-container\"><code><div class=\"line\"><span style=\"color: #D8A657\">\"use strict\"</span><span style=\"color: #D4BE98\">;</span></div><div class=\"line\"><span style=\"color: #7DAEA3\">Object</span><span style=\"color: #A89984\">.</span><span style=\"color: #A9B665\">defineProperty</span><span style=\"color: #D4BE98\">(</span><span style=\"color: #89B482\">exports</span><span style=\"color: #D4BE98\">, </span><span style=\"color: #D8A657\">\"__esModule\"</span><span style=\"color: #D4BE98\">, { value</span><span style=\"color: #A89984\">:</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #D3869B\">true</span><span style=\"color: #D4BE98\"> });</span></div><div class=\"line\"><span style=\"color: #89B482\">exports</span><span style=\"color: #A89984\">.</span><span style=\"color: #D4BE98\">twoPi </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #EA6962\">void</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #D3869B\">0</span><span style=\"color: #D4BE98\">;</span></div><div class=\"line\"><span style=\"color: #E78A4E\">const</span><span style=\"color: #D4BE98\"> constants_1 </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #A9B665\">require</span><span style=\"color: #D4BE98\">(</span><span style=\"color: #D8A657\">\"./constants\"</span><span style=\"color: #D4BE98\">);</span></div><div class=\"line\"><span style=\"color: #89B482\">exports</span><span style=\"color: #A89984\">.</span><span style=\"color: #D4BE98\">twoPi </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #D4BE98\"> constants_1</span><span style=\"color: #A89984\">.</span><span style=\"color: #D4BE98\">valueOfPi </span><span style=\"color: #E78A4E\">*</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #D3869B\">2</span><span style=\"color: #D4BE98\">;</span></div><div class=\"line\">&nbsp;</div></code></div></pre>\n<h4 id=\"umd\" tabindex=\"-1\"><code>UMD</code> <a class=\"header-anchor\" href=\"https://aabccd021.github.io/blog/2023-01-30-initial-commit/\">#</a></h4>\n<pre class=\"shiki gruvbox-material-dark twoslash lsp\" style=\"background-color: #282828; color: #d4be98\"><div class=\"language-id\">ts</div><div class=\"code-container\"><code><div class=\"line\"><span style=\"color: #D4BE98\">(</span><span style=\"color: #EA6962\">function</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">(factory)</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">{</span></div><div class=\"line\"><span style=\"color: #A9B665\">    </span><span style=\"color: #EA6962\">if</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">(</span><span style=\"color: #EA6962\">typeof</span><span style=\"color: #A9B665\"> </span><span style=\"color: #89B482\">module</span><span style=\"color: #A9B665\"> </span><span style=\"color: #E78A4E\">===</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D8A657\">\"object\"</span><span style=\"color: #A9B665\"> </span><span style=\"color: #E78A4E\">&&</span><span style=\"color: #A9B665\"> </span><span style=\"color: #EA6962\">typeof</span><span style=\"color: #A9B665\"> </span><span style=\"color: #89B482\">module</span><span style=\"color: #A89984\">.</span><span style=\"color: #89B482\">exports</span><span style=\"color: #A9B665\"> </span><span style=\"color: #E78A4E\">===</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D8A657\">\"object\"</span><span style=\"color: #D4BE98\">)</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">{</span></div><div class=\"line\"><span style=\"color: #A9B665\">        </span><span style=\"color: #E78A4E\">var</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">v</span><span style=\"color: #A9B665\"> </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #A9B665\"> factory</span><span style=\"color: #D4BE98\">(require,</span><span style=\"color: #A9B665\"> </span><span style=\"color: #89B482\">exports</span><span style=\"color: #D4BE98\">);</span></div><div class=\"line\"><span style=\"color: #A9B665\">        </span><span style=\"color: #EA6962\">if</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">(v</span><span style=\"color: #A9B665\"> </span><span style=\"color: #E78A4E\">!==</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D3869B\">undefined</span><span style=\"color: #D4BE98\">)</span><span style=\"color: #A9B665\"> </span><span style=\"color: #89B482\">module</span><span style=\"color: #A89984\">.</span><span style=\"color: #89B482\">exports</span><span style=\"color: #A9B665\"> </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">v;</span></div><div class=\"line\"><span style=\"color: #A9B665\">    </span><span style=\"color: #D4BE98\">}</span></div><div class=\"line\"><span style=\"color: #A9B665\">    </span><span style=\"color: #EA6962\">else</span><span style=\"color: #A9B665\"> </span><span style=\"color: #EA6962\">if</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">(</span><span style=\"color: #EA6962\">typeof</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">define</span><span style=\"color: #A9B665\"> </span><span style=\"color: #E78A4E\">===</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D8A657\">\"function\"</span><span style=\"color: #A9B665\"> </span><span style=\"color: #E78A4E\">&&</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">define</span><span style=\"color: #A89984\">.</span><span style=\"color: #D4BE98\">amd)</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">{</span></div><div class=\"line\"><span style=\"color: #A9B665\">        define</span><span style=\"color: #D4BE98\">([</span><span style=\"color: #D8A657\">\"require\"</span><span style=\"color: #D4BE98\">,</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D8A657\">\"exports\"</span><span style=\"color: #D4BE98\">,</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D8A657\">\"./constants\"</span><span style=\"color: #D4BE98\">],</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">factory);</span></div><div class=\"line\"><span style=\"color: #A9B665\">    </span><span style=\"color: #D4BE98\">}</span></div><div class=\"line\"><span style=\"color: #D4BE98\">})(</span><span style=\"color: #EA6962\">function</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">(require,</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">exports)</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">{</span></div><div class=\"line\"><span style=\"color: #A9B665\">    </span><span style=\"color: #D8A657\">\"use strict\"</span><span style=\"color: #D4BE98\">;</span></div><div class=\"line\"><span style=\"color: #A9B665\">    </span><span style=\"color: #7DAEA3\">Object</span><span style=\"color: #A89984\">.</span><span style=\"color: #A9B665\">defineProperty</span><span style=\"color: #D4BE98\">(</span><span style=\"color: #89B482\">exports</span><span style=\"color: #D4BE98\">,</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D8A657\">\"__esModule\"</span><span style=\"color: #D4BE98\">,</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">{</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">value</span><span style=\"color: #A89984\">:</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D3869B\">true</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">});</span></div><div class=\"line\"><span style=\"color: #A9B665\">    </span><span style=\"color: #89B482\">exports</span><span style=\"color: #A89984\">.</span><span style=\"color: #D4BE98\">twoPi</span><span style=\"color: #A9B665\"> </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #A9B665\"> </span><span style=\"color: #EA6962\">void</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D3869B\">0</span><span style=\"color: #D4BE98\">;</span></div><div class=\"line\"><span style=\"color: #A9B665\">    </span><span style=\"color: #E78A4E\">const</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">constants_1</span><span style=\"color: #A9B665\"> </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #A9B665\"> require</span><span style=\"color: #D4BE98\">(</span><span style=\"color: #D8A657\">\"./constants\"</span><span style=\"color: #D4BE98\">);</span></div><div class=\"line\"><span style=\"color: #A9B665\">    </span><span style=\"color: #89B482\">exports</span><span style=\"color: #A89984\">.</span><span style=\"color: #D4BE98\">twoPi</span><span style=\"color: #A9B665\"> </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">constants_1</span><span style=\"color: #A89984\">.</span><span style=\"color: #D4BE98\">valueOfPi</span><span style=\"color: #A9B665\"> </span><span style=\"color: #E78A4E\">*</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D3869B\">2</span><span style=\"color: #D4BE98\">;</span></div><div class=\"line\"><span style=\"color: #D4BE98\">});</span></div><div class=\"line\">&nbsp;</div></code></div></pre>\n<h4 id=\"amd\" tabindex=\"-1\"><code>AMD</code> <a class=\"header-anchor\" href=\"https://aabccd021.github.io/blog/2023-01-30-initial-commit/\">#</a></h4>\n<pre class=\"shiki gruvbox-material-dark twoslash lsp\" style=\"background-color: #282828; color: #d4be98\"><div class=\"language-id\">ts</div><div class=\"code-container\"><code><div class=\"line\"><span style=\"color: #A9B665\">define</span><span style=\"color: #D4BE98\">([</span><span style=\"color: #D8A657\">\"require\"</span><span style=\"color: #D4BE98\">, </span><span style=\"color: #D8A657\">\"exports\"</span><span style=\"color: #D4BE98\">, </span><span style=\"color: #D8A657\">\"./constants\"</span><span style=\"color: #D4BE98\">], </span><span style=\"color: #EA6962\">function</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">(require,</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">exports,</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">constants_1)</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">{</span></div><div class=\"line\"><span style=\"color: #A9B665\">    </span><span style=\"color: #D8A657\">\"use strict\"</span><span style=\"color: #D4BE98\">;</span></div><div class=\"line\"><span style=\"color: #A9B665\">    </span><span style=\"color: #7DAEA3\">Object</span><span style=\"color: #A89984\">.</span><span style=\"color: #A9B665\">defineProperty</span><span style=\"color: #D4BE98\">(</span><span style=\"color: #89B482\">exports</span><span style=\"color: #D4BE98\">,</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D8A657\">\"__esModule\"</span><span style=\"color: #D4BE98\">,</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">{</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">value</span><span style=\"color: #A89984\">:</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D3869B\">true</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">});</span></div><div class=\"line\"><span style=\"color: #A9B665\">    </span><span style=\"color: #89B482\">exports</span><span style=\"color: #A89984\">.</span><span style=\"color: #D4BE98\">twoPi</span><span style=\"color: #A9B665\"> </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #A9B665\"> </span><span style=\"color: #EA6962\">void</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D3869B\">0</span><span style=\"color: #D4BE98\">;</span></div><div class=\"line\"><span style=\"color: #A9B665\">    </span><span style=\"color: #89B482\">exports</span><span style=\"color: #A89984\">.</span><span style=\"color: #D4BE98\">twoPi</span><span style=\"color: #A9B665\"> </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">constants_1</span><span style=\"color: #A89984\">.</span><span style=\"color: #D4BE98\">valueOfPi</span><span style=\"color: #A9B665\"> </span><span style=\"color: #E78A4E\">*</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D3869B\">2</span><span style=\"color: #D4BE98\">;</span></div><div class=\"line\"><span style=\"color: #D4BE98\">});</span></div><div class=\"line\">&nbsp;</div></code></div></pre>\n<h4 id=\"system\" tabindex=\"-1\"><code>System</code> <a class=\"header-anchor\" href=\"https://aabccd021.github.io/blog/2023-01-30-initial-commit/\">#</a></h4>\n<pre class=\"shiki gruvbox-material-dark twoslash lsp\" style=\"background-color: #282828; color: #d4be98\"><div class=\"language-id\">ts</div><div class=\"code-container\"><code><div class=\"line\"><span style=\"color: #D4BE98\">System</span><span style=\"color: #A89984\">.</span><span style=\"color: #A9B665\">register</span><span style=\"color: #D4BE98\">([</span><span style=\"color: #D8A657\">\"./constants\"</span><span style=\"color: #D4BE98\">], </span><span style=\"color: #EA6962\">function</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">(exports_1,</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">context_1)</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">{</span></div><div class=\"line\"><span style=\"color: #A9B665\">    </span><span style=\"color: #D8A657\">\"use strict\"</span><span style=\"color: #D4BE98\">;</span></div><div class=\"line\"><span style=\"color: #A9B665\">    </span><span style=\"color: #E78A4E\">var</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">constants_1,</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">twoPi;</span></div><div class=\"line\"><span style=\"color: #A9B665\">    </span><span style=\"color: #E78A4E\">var</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">__moduleName</span><span style=\"color: #A9B665\"> </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">context_1</span><span style=\"color: #A9B665\"> </span><span style=\"color: #E78A4E\">&&</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">context_1</span><span style=\"color: #A89984\">.</span><span style=\"color: #D4BE98\">id;</span></div><div class=\"line\"><span style=\"color: #A9B665\">    </span><span style=\"color: #EA6962\">return</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">{</span></div><div class=\"line\"><span style=\"color: #A9B665\">        </span><span style=\"color: #D4BE98\">setters</span><span style=\"color: #A89984\">:</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">[</span></div><div class=\"line\"><span style=\"color: #A9B665\">            </span><span style=\"color: #EA6962\">function</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">(constants_1_1)</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">{</span></div><div class=\"line\"><span style=\"color: #A9B665\">                </span><span style=\"color: #D4BE98\">constants_1</span><span style=\"color: #A9B665\"> </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">constants_1_1;</span></div><div class=\"line\"><span style=\"color: #A9B665\">            </span><span style=\"color: #D4BE98\">}</span></div><div class=\"line\"><span style=\"color: #A9B665\">        </span><span style=\"color: #D4BE98\">],</span></div><div class=\"line\"><span style=\"color: #A9B665\">        execute</span><span style=\"color: #A89984\">:</span><span style=\"color: #A9B665\"> </span><span style=\"color: #EA6962\">function</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">()</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">{</span></div><div class=\"line\"><span style=\"color: #A9B665\">            exports_1</span><span style=\"color: #D4BE98\">(</span><span style=\"color: #D8A657\">\"twoPi\"</span><span style=\"color: #D4BE98\">,</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">twoPi</span><span style=\"color: #A9B665\"> </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D4BE98\">constants_1</span><span style=\"color: #A89984\">.</span><span style=\"color: #D4BE98\">valueOfPi</span><span style=\"color: #A9B665\"> </span><span style=\"color: #E78A4E\">*</span><span style=\"color: #A9B665\"> </span><span style=\"color: #D3869B\">2</span><span style=\"color: #D4BE98\">);</span></div><div class=\"line\"><span style=\"color: #A9B665\">        </span><span style=\"color: #D4BE98\">}</span></div><div class=\"line\"><span style=\"color: #A9B665\">    </span><span style=\"color: #D4BE98\">};</span></div><div class=\"line\"><span style=\"color: #D4BE98\">});</span></div><div class=\"line\">&nbsp;</div></code></div></pre>\n<h4 id=\"esnext\" tabindex=\"-1\"><code>ESNext</code> <a class=\"header-anchor\" href=\"https://aabccd021.github.io/blog/2023-01-30-initial-commit/\">#</a></h4>\n<pre class=\"shiki gruvbox-material-dark twoslash lsp\" style=\"background-color: #282828; color: #d4be98\"><div class=\"language-id\">ts</div><div class=\"code-container\"><code><div class=\"line\"><span style=\"color: #D3869B\">import</span><span style=\"color: #D4BE98\"> { valueOfPi } </span><span style=\"color: #EA6962\">from</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #D8A657\">\"./constants\"</span><span style=\"color: #D4BE98\">;</span></div><div class=\"line\"><span style=\"color: #D3869B\">export</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #E78A4E\">const</span><span style=\"color: #D4BE98\"> twoPi </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #D4BE98\"> valueOfPi </span><span style=\"color: #E78A4E\">*</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #D3869B\">2</span><span style=\"color: #D4BE98\">;</span></div><div class=\"line\">&nbsp;</div></code></div></pre>\n<h4 id=\"es2020\" tabindex=\"-1\"><code>ES2020</code> <a class=\"header-anchor\" href=\"https://aabccd021.github.io/blog/2023-01-30-initial-commit/\">#</a></h4>\n<pre class=\"shiki gruvbox-material-dark twoslash lsp\" style=\"background-color: #282828; color: #d4be98\"><div class=\"language-id\">ts</div><div class=\"code-container\"><code><div class=\"line\"><span style=\"color: #D3869B\">import</span><span style=\"color: #D4BE98\"> { valueOfPi } </span><span style=\"color: #EA6962\">from</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #D8A657\">\"./constants\"</span><span style=\"color: #D4BE98\">;</span></div><div class=\"line\"><span style=\"color: #D3869B\">export</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #E78A4E\">const</span><span style=\"color: #D4BE98\"> twoPi </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #D4BE98\"> valueOfPi </span><span style=\"color: #E78A4E\">*</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #D3869B\">2</span><span style=\"color: #D4BE98\">;</span></div><div class=\"line\">&nbsp;</div></code></div></pre>\n<p>If you are wondering about the difference between ES2015 and ES2020, ES2020 adds support for dynamic <code>import</code>s, and <code>import.meta</code>.</p>\n<h3 id=\"none\" tabindex=\"-1\"><code>None</code> <a class=\"header-anchor\" href=\"https://aabccd021.github.io/blog/2023-01-30-initial-commit/\">#</a></h3>\n<pre class=\"shiki gruvbox-material-dark twoslash lsp\" style=\"background-color: #282828; color: #d4be98\"><div class=\"language-id\">ts</div><div class=\"code-container\"><code><div class=\"line\"><span style=\"color: #D8A657\">\"use strict\"</span><span style=\"color: #D4BE98\">;</span></div><div class=\"line\"><span style=\"color: #7DAEA3\">Object</span><span style=\"color: #A89984\">.</span><span style=\"color: #A9B665\">defineProperty</span><span style=\"color: #D4BE98\">(</span><span style=\"color: #89B482\">exports</span><span style=\"color: #D4BE98\">, </span><span style=\"color: #D8A657\">\"__esModule\"</span><span style=\"color: #D4BE98\">, { value</span><span style=\"color: #A89984\">:</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #D3869B\">true</span><span style=\"color: #D4BE98\"> });</span></div><div class=\"line\"><span style=\"color: #89B482\">exports</span><span style=\"color: #A89984\">.</span><span style=\"color: #D4BE98\">twoPi </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #EA6962\">void</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #D3869B\">0</span><span style=\"color: #D4BE98\">;</span></div><div class=\"line\"><span style=\"color: #E78A4E\">const</span><span style=\"color: #D4BE98\"> constants_1 </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #A9B665\">require</span><span style=\"color: #D4BE98\">(</span><span style=\"color: #D8A657\">\"./constants\"</span><span style=\"color: #D4BE98\">);</span></div><div class=\"line\"><span style=\"color: #89B482\">exports</span><span style=\"color: #A89984\">.</span><span style=\"color: #D4BE98\">twoPi </span><span style=\"color: #E78A4E\">=</span><span style=\"color: #D4BE98\"> constants_1</span><span style=\"color: #A89984\">.</span><span style=\"color: #D4BE98\">valueOfPi </span><span style=\"color: #E78A4E\">*</span><span style=\"color: #D4BE98\"> </span><span style=\"color: #D3869B\">2</span><span style=\"color: #D4BE98\">;</span></div><div class=\"line\">&nbsp;</div></code></div></pre>\n",
			"date_published": "2023-01-30T14:05:08Z"
		}
		,
		{
			"id": "https://aabccd021.github.io/blog/fourth/",
			"url": "https://aabccd021.github.io/blog/fourth/",
			"title": "This is my fourth post.",
			"content_html": "<p>Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collaborative thinking to further the overall value proposition. Organically grow the holistic world view of disruptive innovation via workplace diversity and empowerment.</p>\n<p>Bring to the table win-win survival strategies to ensure proactive domination. At the end of the day, going forward, a new normal that has evolved from generation X is on the runway heading towards a streamlined cloud solution. User generated content in real-time will have multiple touchpoints for offshoring.</p>\n<p><picture><source type=\"image/avif\" srcset=\"https://aabccd021.github.io/img/IdthKOzqFA-350.avif 350w\"><source type=\"image/webp\" srcset=\"https://aabccd021.github.io/img/IdthKOzqFA-350.webp 350w\"><img alt=\"A possum parent and two possum kids hanging from the iconic red balloon\" loading=\"lazy\" decoding=\"async\" src=\"https://aabccd021.github.io/img/IdthKOzqFA-350.png\" width=\"350\" height=\"685\"></picture></p>\n<h2 id=\"section-header\" tabindex=\"-1\">Section Header <a class=\"header-anchor\" href=\"https://aabccd021.github.io/blog/fourth/\">#</a></h2>\n<p>Capitalize on low hanging fruit to identify a ballpark value added activity to beta test. Override the digital divide with additional clickthroughs from DevOps. Nanotechnology immersion along the information highway will close the loop on focusing solely on the bottom line.</p>\n",
			"date_published": "2018-09-30T00:00:00Z"
		}
		
	]
}
